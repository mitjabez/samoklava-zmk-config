/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*
 * This is a keymap for Samoklava, a Corne-compatible wireless keyboard. You can use this keymap with a Corne as well.
 * To compile, run these commands:
 *
 *   west build -d build/left -b nice_nano_v2 -- -DSHIELD=corne_left -DZMK_CONFIG='../../samoklava-zmk-config/config'
 *   west build -d build/right -b nice_nano_v2 -- -DSHIELD=corne_right -DZMK_CONFIG='../../samoklava-zmk-config/config'
 *   cp build/left/zephyr/zmk.uf2 ~/Desktop/left.uf2
 *   cp build/right/zephyr/zmk.uf2 ~/Desktop/right.uf2
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT 0
#define LOWER   1
#define SYMBOL  2
#define I3      3
#define LWR LOWER
#define SYM SYMBOL

&mt {
    quick-tap-ms = <180>;
    tapping-term-ms = <250>;
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {
        behaviors {
            //                 Key positions
            //       0  1  2  3  4  5    6  7  8  9 10 11
            //      12 13 14 15 16 17   18 19 20 21 22 23
            //      24 25 26 27 28 29   30 31 32 33 34 35
            //               36 37 38   39 40 41

            hml: homerow_mods_left {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_LEFT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                require-prior-idle-ms = <120>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <
                                         6  7  8  9 10
                       13 14 15 16      18 19 20 21 22
                          26            30 31 32 33 34
                             36 37 38   39 40 41
                    >;    // <---[[right-hand keys + all homerow mods + all thumbs]]
            };

            hsl: homerow_shift_left {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_SHIFT_LEFT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                require-prior-idle-ms = <50>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <
                                         6  7  8  9 10
                       13 14 15 16      18 19 20 21 22
                          26            30 31 32 33 34
                             36 37 38   39 40 41
                    >;    // <---[[right-hand keys + all homerow mods + all thumbs]]
            };

            hmr: homerow_mods_right {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_RIGHT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                require-prior-idle-ms = <120>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <
                        1  2  3  4  5
                       13 14 15 16 17      19 20 21 22
                       25 26 27 28 29            33
                             36 37 38   39 40 41
                    >;    // <---[[left-hand keys + all homerow mods + all thumbs]]
            };

            hsr: homerow_shift_right {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_SHIFT_RIGHT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                require-prior-idle-ms = <50>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <
                        1  2  3  4  5
                       13 14 15 16 17      19 20 21 22
                       25 26 27 28 29            33
                             36 37 38   39 40 41
                    >;    // <---[[left-hand keys + all homerow mods + all thumbs]]
            };
        };

        macros {
            // Slovenian chars
            slo_upper_ch: slo_upper_ch {
                label = "slo_upper_ch";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp RIGHT_ALT>
                    , <&macro_press &kp RIGHT_SHIFT>
                    , <&macro_tap &kp SEMICOLON>
                    , <&macro_release &kp RIGHT_SHIFT>
                    , <&macro_release &kp RIGHT_ALT>
                    ;
            };
            slo_upper_zh: slo_upper_zh {
                label = "slo_upper_zh";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp RIGHT_ALT>
                    , <&macro_press &kp RIGHT_SHIFT>
                    , <&macro_tap &kp BACKSLASH>
                    , <&macro_release &kp RIGHT_SHIFT>
                    , <&macro_release &kp RIGHT_ALT>
                    ;
            };
            slo_upper_sh: slo_upper_sh {
                label = "slo_upper_sh";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp RIGHT_ALT>
                    , <&macro_press &kp RIGHT_SHIFT>
                    , <&macro_tap &kp LBKT>
                    , <&macro_release &kp RIGHT_SHIFT>
                    , <&macro_release &kp RIGHT_ALT>
                    ;
            };
        };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none &kp Q        &kp W         &kp E          &kp R         &kp T             &kp Y         &kp U            &kp I           &kp O            &kp P          &none
   &none &hml LCMD A  &hml LALT S   &hml LCTRL D   &hsl LSHFT F  &kp G             &kp H         &hsr RSHFT J     &hmr RCTRL K    &hmr RALT L      &hmr RCMD SEMI &none
   &none &kp Z        &kp X         &kp C          &kp V         &kp B             &kp N         &kp M            &kp COMMA       &kp  DOT         &kp FSLH       &none
                                    &kp ESC        &lt SYM SPACE &lt LWR TAB       &lt LWR DEL   &lt SYM BSPC     &lt I3 RET
                        >;
                };
                lower_layer {
                        bindings = <
   &none &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7           &kp N8           &kp N9          &kp N0         &none
   &none &slo_upper_zh &slo_upper_sh &slo_upper_ch &kp LSHFT     &none             &kp LEFT      &hsr RSHFT DOWN  &kp UP           &kp RIGHT       &kp COMMA      &none
   &none &kp RA(BSLH)  &kp RA(LBKT)  &kp RA(SEMI)  &none         &caps_word        &kp HOME      &kp PG_DN        &kp PG_UP        &kp END         &kp DOT        &none
                                     &kp ESC       &kp SPACE     &kp TAB           &kp DEL       &kp BSPC         &kp RET
                        >;
                };
                symbol_layer {
                        bindings = <
   &none &kp LS(N1)    &kp LS(N2)    &kp LS(N3)    &kp LS(N4)    &kp LS(N5)        &kp LS(N6)    &kp LS(N7)       &kp LS(N8)       &kp LS(N9)      &kp LS(N0)     &none
   &none &none         &none         &kp GRAVE     &none         &kp EQUAL         &kp MINUS     &kp SQT          &kp LBKT         &kp RBKT        &kp BSLH       &none
   &none &none         &none         &kp LS(GRAVE) &none         &kp LS(EQUAL)     &kp LS(MINUS) &kp LS(SQT)      &kp LS(LBKT)     &kp LS(RBKT)    &kp LS(BSLH)   &none
                                     &kp ESC       &kp SPACE     &kp TAB           &kp DEL       &kp BSPC         &kp RET
                        >;
                };
                i3_layer {
                        bindings = <
   &none &kp LG(N1)    &kp LG(N2)    &kp LG(N3)    &kp LG(N4)    &kp LG(N5)        &kp LG(N6)    &kp LG(N7)       &kp LG(N8)       &kp LG(N9)      &kp LG(N0)     &none
   &none &none         &none         &none         &kp LSHFT     &none             &none         &kp LSHFT        &none            &none           &none          &none
   &none &none         &none         &none         &none         &none             &none         &none            &none            &none           &none          &none
                                     &kp ESC       &kp SPACE     &kp TAB           &kp DEL       &kp BSPC         &kp RET
                        >;
                };
        };
};
